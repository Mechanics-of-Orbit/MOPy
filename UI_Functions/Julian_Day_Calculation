def calendar_time(self, accuracy_given):
    if accuracy_given == 2:
        accuracy = accuracy_given
        selected_date = self.ui.calendarWidget_PE.selectedDate()
        selected_time = self.ui.timeEdit_PE.time()
        calendar = '  Julian Calendar'
    elif accuracy_given == 'none':
        accuracy = self.ui.digits_accuracy.value()
        selected_date = self.ui.calendarWidget.selectedDate()
        selected_time = self.ui.timeEdit.time()
        calendar = self.ui.type_of_calendar.currentText()
    year = selected_date.year()
    month = selected_date.month()
    day = selected_date.day()

    hour = selected_time.hour()
    minutes = selected_time.minute()
    seconds = selected_time.second()
    
    JDN = 1
    if calendar == "  Gregorian Calendar":
        self.ui.Error_state.setText("")
        #julian day number from Gregorian calender date
        JDN = int((1461 * (year + 4800 + (month - 14)/12))/4) + int((367 * month - 2 - 12 * ((month - 14)/12))/12) - int((3 * ((year + 4900 + (month - 14)/12)/100))/4) + day - 32075
        self.ui.Julian_Day_Frame.show()
        self.ui.Error_Frame.hide()
    elif calendar == "  Julian Calendar":
        if accuracy_given == 2:
            JDN = 367 * year - int((7 * (year + 5001 + (month - 9)/7))/4) + int((275 * month)/9) + day + 1729777
        elif accuracy_given == 'none':
            self.ui.Error_state.setText("")
            #julian day number from julian calender date
            JDN = 367 * year - int((7 * (year + 5001 + (month - 9)/7))/4) + int((275 * month)/9) + day + 1729777
            self.ui.Julian_Day_Frame.show()
            self.ui.Error_Frame.hide()
    elif calendar == "  Select the Type Of Calendar":
        self.ui.Error_state.setText("Please select the type of calendar")
        self.ui.Error_Frame.show()
        self.ui.Julian_Day_Frame.hide()
            
    #JDN to JD
    JD = JDN + round(((hour - 12)/24),accuracy) + round((minutes/1440), accuracy) + round((seconds/86400), accuracy)
    
    if accuracy_given == 2:
        return JD
    elif accuracy_given == 'none':
        self.ui.JulianDay_Result.setText(str(round(JD, accuracy)))